{"files": {"/home/parallels/Desktop/simpleTool/raw_input/20001117-1.c": {"language": "cpp", "mutants": [{"id": "cxx_lt_to_ge", "location": {"end": {"column": 12, "line": 12}, "start": {"column": 11, "line": 12}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Killed"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 12, "line": 12}, "start": {"column": 11, "line": 12}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_gt_to_ge", "location": {"end": {"column": 15, "line": 14}, "start": {"column": 14, "line": 14}}, "mutatorName": "Replaced > with >=", "replacement": ">=", "status": "Survived"}, {"id": "cxx_gt_to_le", "location": {"end": {"column": 15, "line": 14}, "start": {"column": 14, "line": 14}}, "mutatorName": "Replaced > with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_mul_to_div", "location": {"end": {"column": 15, "line": 18}, "start": {"column": 14, "line": 18}}, "mutatorName": "Replaced * with /", "replacement": "/", "status": "Killed"}, {"id": "cxx_sub_to_add", "location": {"end": {"column": 20, "line": 18}, "start": {"column": 19, "line": 18}}, "mutatorName": "Replaced - with +", "replacement": "+", "status": "Killed"}, {"id": "cxx_ne_to_eq", "location": {"end": {"column": 24, "line": 23}, "start": {"column": 22, "line": 23}}, "mutatorName": "Replaced != with ==", "replacement": "==", "status": "Killed"}, {"id": "cxx_eq_to_ne", "location": {"end": {"column": 19, "line": 33}, "start": {"column": 17, "line": 33}}, "mutatorName": "Replaced == with !=", "replacement": "!=", "status": "Survived"}, {"id": "cxx_eq_to_ne", "location": {"end": {"column": 19, "line": 40}, "start": {"column": 17, "line": 40}}, "mutatorName": "Replaced == with !=", "replacement": "!=", "status": "Survived"}], "source": "/* { dg-do run } */\n/* { dg-options \"-O2 -finstrument-functions\" } */\n/* { dg-require-effective-target return_address } */\n\nextern void abort (void);\nextern void exit (int);\n\ndouble\nfoo (double a, double b)\n{\n  double c;\n  if (0.0 < a)\n    c = a;\n  else if (b > 0.0)\n    c = 0.0;\n  else\n    return 0;\n  return 2.0 * (b - c);\n}\n\nint main ()\n{\n  if (foo (1.0, 4.0) != 6.0)\n    abort ();\n  exit (0);\n}\n\n/* Abort on non-NULL CALL_SITE to ensure that __builtin_return_address\n   was expanded properly.  */\nvoid __attribute__((no_instrument_function))\n__cyg_profile_func_enter(void *this_fn, void *call_site)\n{\n  if (call_site == (void *)0)\n    abort ();\n}\n\nvoid __attribute__((no_instrument_function))\n__cyg_profile_func_exit(void *this_fn, void *call_site)\n{\n  if (call_site == (void *)0)\n    abort ();\n}\n\n"}}, "mutationScore": 44, "schemaVersion": "1.1.1", "thresholds": {"high": 80, "low": 60}}