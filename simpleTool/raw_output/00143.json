{"files": {"/home/parallels/Desktop/simpleTool/raw_input/00143.c": {"language": "cpp", "mutants": [{"id": "cxx_lt_to_ge", "location": {"end": {"column": 19, "line": 14}, "start": {"column": 18, "line": 14}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Survived"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 19, "line": 14}, "start": {"column": 18, "line": 14}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_post_inc_to_post_dec", "location": {"end": {"column": 27, "line": 14}, "start": {"column": 25, "line": 14}}, "mutatorName": "Replaced x++ with x--", "replacement": "--", "status": "Killed"}, {"id": "cxx_add_to_sub", "location": {"end": {"column": 17, "line": 21}, "start": {"column": 16, "line": 21}}, "mutatorName": "Replaced + with -", "replacement": "-", "status": "Killed"}, {"id": "cxx_div_to_mul", "location": {"end": {"column": 22, "line": 21}, "start": {"column": 21, "line": 21}}, "mutatorName": "Replaced / with *", "replacement": "*", "status": "Killed"}, {"id": "cxx_rem_to_div", "location": {"end": {"column": 20, "line": 22}, "start": {"column": 19, "line": 22}}, "mutatorName": "Replaced % with /", "replacement": "/", "status": "Killed"}, {"id": "cxx_gt_to_ge", "location": {"end": {"column": 27, "line": 31}, "start": {"column": 26, "line": 31}}, "mutatorName": "Replaced > with >=", "replacement": ">=", "status": "Killed"}, {"id": "cxx_gt_to_le", "location": {"end": {"column": 27, "line": 31}, "start": {"column": 26, "line": 31}}, "mutatorName": "Replaced > with <=", "replacement": "<=", "status": "Killed"}, {"id": "cxx_lt_to_ge", "location": {"end": {"column": 19, "line": 33}, "start": {"column": 18, "line": 33}}, "mutatorName": "Replaced < with >=", "replacement": ">=", "status": "Survived"}, {"id": "cxx_lt_to_le", "location": {"end": {"column": 19, "line": 33}, "start": {"column": 18, "line": 33}}, "mutatorName": "Replaced < with <=", "replacement": "<=", "status": "Survived"}, {"id": "cxx_post_inc_to_post_dec", "location": {"end": {"column": 27, "line": 33}, "start": {"column": 25, "line": 33}}, "mutatorName": "Replaced x++ with x--", "replacement": "--", "status": "Killed"}, {"id": "cxx_ne_to_eq", "location": {"end": {"column": 19, "line": 34}, "start": {"column": 17, "line": 34}}, "mutatorName": "Replaced != with ==", "replacement": "==", "status": "Killed"}], "source": "/* Disgusting, no?  But it compiles and runs just fine.  I feel a combination of\n   pride and revulsion at this discovery.  If no one's thought of it before,\n   I think I'll name it after myself.\n   It amazes me that after 10 years of writing C there are still\n   little corners that I haven't explored fully.\n   - Tom Duff */\n\nint main()\n{\n    int  count, n;\n    short *from, *to;\n    short a[39], b[39];\n\n    for(n = 0; n < 39; n++) {\n        a[n] = n;\n        b[n] = 0;\n    }\n    from = a;\n    to = b;\n    count = 39;\n    n = (count + 7) / 8;\n    switch (count % 8) {\n    case 0: do { *to++ = *from++;\n    case 7:      *to++ = *from++;\n    case 6:      *to++ = *from++;\n    case 5:      *to++ = *from++;\n    case 4:      *to++ = *from++;\n    case 3:      *to++ = *from++;\n    case 2:      *to++ = *from++;\n    case 1:      *to++ = *from++;\n            } while (--n > 0);\n    }\n    for(n = 0; n < 39; n++)\n        if(a[n] != b[n])\n            return 1;\n    return 0;\n}"}}, "mutationScore": 66, "schemaVersion": "1.1.1", "thresholds": {"high": 80, "low": 60}}